常见出错问题：
1，member reference base type 'int' is not a structure or union
https://stackoverflow.com/questions/58382478/for-loop-saying-error-member-reference-base-type-int-13-is-not-a-structure
2，subscripted value is not an array, pointer, or vector
一，对string类型的进行具体个数枚举
for (int i = 0; i <= n - k; ++i) {
            // 枚举所有长度为 k 的子串
            int tmp = stoi(s.substr(i, k));
            if (tmp && num % tmp == 0) {
                ++res;
            }
        }
   但是这个是固定长度（k）。
   substr(a,b),是从a开始，长度为b的字符串
   怎么进行全枚举呢？
   估计要回溯什么的，放中等了
 二，1903. 字符串中的最大奇数
 1，最大奇数就是，最长的
 2，所谓奇数，就是看最后一位数字是不是奇数。
 三，截取stirng类型的空格
 istringstream iss(sentence);
        string t;
        while (getline(iss, t, ' ')) { // while (iss >> t)
四，copy函数用法
1，copy(d1.begin(),d1.end(),d2.begin());
d1是已知容器
d2是目的容器
用的时候有点问题...
五，环和杆
1，也可以用
unordered_map<int,set<char>> 这种玩意
六，2006. 差的绝对值为 K 的数对数目
1，无要学习的地方
七，2000. 反转单词前缀
1，无
七，2057. 值相等的最小索引
1，无
！！！八，5259. 计算应缴税款总额
1，还真感觉有点不会
得多做做最近的竞赛题或者单纯的简单题
2,这个实在不太会！
6/13,努力把第六页的写完
九，2062. 统计字符串中的元音子字符串
1，本质是枚举子串，并问你哪些子串包含另外一些子串
2，
十，2047. 句子中的有效单词数
1，一看就是我不会的
2，这题挺难的
3，有机会再搞搞
十一，2042. 检查句子中的数字是否递增
1，还可以，过了
十二，2037. 使每位学生都有座位的最少移动次数
1，什么类型题呢？不太会
2，竟然只需要求差的绝对值，离谱
十三，2032. 至少在两个数组中出现的值
1,如果两个数组的话你会不
2,本质上用不同的数字分别标记num1和num2，num2和num3相同的
十四，2027. 转换字符串的最少操作次数
1，一时没懂
2.int ans=0;

        for(int i=0;i<s.size();i++)
        {
            if(s[i]=='X')
            { i+=2;
            ans++;}
        }
        return ans;
        
        很可以，另外那个ans++要在括号里面
竞赛第六页，做完这个应该完了
开始第五页
一，2114. 句子中的最多单词数
1，没难度
二，2108. 找出数组中的第一个回文字符串
1，积累下回文串的
 bool ishuiwen(string a)
    {
        string b=a;
        reverse(b.begin(),b.end());

        for(int i=0;i<a.size();i++)
        {
            if(a[i]!=b[i]) return false;
        }

        return true;
    }
三，环和杆
！四，2099. 找到和最大的长度为 K 的子序列
1.怎么求数组类型的子序列
vector<int> t;
    vector<vector<int>> ans;

    void dfs(int cur, vector<int>& nums) {
        if (cur == nums.size())
        //这里可以改下nums.size，3就是长度为4的子集
        {
            ans.push_back(t);
            return;
        }
        t.push_back(nums[cur]);
        dfs(cur + 1, nums);
        t.pop_back();
        dfs(cur + 1, nums);
    }

    vector<vector<int>> subsets(vector<int>& nums) {
        dfs(0, nums);
        return ans;
    }
    用我的方法，总是卡在一些问题上？？
五，2094. 找出 3 位偶数
1，用我的方法栈溢出
不知道为什么
vector<int> t;
    vector<vector<int>> ans;
    
    void dfs(int cur, vector<int>& nums) {
        if (cur == 2) {
            ans.push_back(t);
            return;
        }
        t.push_back(nums[cur]);
        dfs(cur + 1, nums);
        t.pop_back();
        dfs(cur + 1, nums);
    }
    int bianzhengshu(vector<int> a)
    {
        if(a[0]==0) return 1;
        int ans=a[0]*100+a[1]*10+a[2];
        return ans;
    }

    vector<int> findEvenNumbers(vector<int>& digits) {
          dfs(0, digits);
          vector<int> res;

          for(int i=0;i<ans.size();i++)
          {
              if(bianzhengshu(ans[i])%2==0) res.push_back(bianzhengshu(ans[i]));
          }
          return res;
2，




