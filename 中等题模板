一，1958. 检查操作是否合法
1，如何枚举八个方向
vector<int> dx = {1, 1, 0, -1, -1, -1, 0, 1};   // 行改变量
 vector<int> dy = {0, 1, 1, 1, 0, -1, -1, -1}; // 列改变量
2，套路可以记一下，主要是while里面的
 int x = rMove + dx;
int y = cMove + dy;
int step = 1;   // 当前遍历到的节点序号
while (x >= 0 && x < 8 && y >= 0 && y < 8){
                if (step == 1){
                    // 第一个点必须为相反颜色
                    if (board[x][y] == '.' || board[x][y] == color){
                        return false;
                    }
                }
                else{
                    // 好线段中不应存在空格子
                    if (board[x][y] == '.'){
                        return false;
                    }
                    // 遍历到好线段的终点，返回 true
                    if (board[x][y] == color){
                        return true;
                    }
                }
                ++step;
                x += dx;
                y += dy;
            }
二，2063. 所有子字符串中的元音
对string类型全枚举的模板
vector<char> t;
    vector<vector<char>> ans;
    void dfs(int cur, string& word) {
        if (cur == word.size()) {
            ans.push_back(t);
            return;
        }
        t.push_back(word[cur]);
        dfs(cur + 1, word);
        t.pop_back();
        dfs(cur + 1, word);
    }


    long long countVowels(string word) {
        int n=word.size();
        dfs(0, word);
       这个模板可以，但是比如"aba",子集是没有"aa"的，但是它也给你搞了
       因为是用的数组的枚举...
一，37.解数独
1，代码
预定义
处理函数
入口函数
2，题解
2.1其中 ii 个元素的值为 True，当且仅当数字 i+1i+1 出现过。例如我们用 \textit{line}[2][3] = \text{True}line[2][3]=True 表示数字 44 在第 22 行已经出现过
2.2遍历，遍历过程中一个格子是空白格，记录空白格得坐标。一个格子是数字，使得这个对应的行列方格设置为false；
枚举递归，回去递归的时候，填入一个数字x，并确定对应行列方格没有重复。回溯的时候记得要把东西都设置回去。
2.3 具体地，第 ii 行第 jj 列的格子位于第 (\lfloor i/3 \rfloor, \lfloor j/3 \rfloor)(⌊i/3⌋,⌊j/3⌋) 个九宫格中，其中 \lfloor u \rfloor⌊u⌋ 表示对 uu 向下取整。

二，40.组合总和 II

